; Actual Bar
(defwidget bar []
  (centerbox :orientation "h"
    (workspace)
    (activity)
    (stats)))

; Widgets
(defwidget workspace []
  (literal :content workspaces))

(defwidget activity []
  (box
    :halign "center"
    :orientation "h"
    time))

(defwidget stats []
  (box
    :halign "end"
    :orientation "h"
    :space-evenly false
    (button :class ""
            :onclick "playerctl play-pause" 
      (label 
        :limit-width 40
        :text { (is-playing == "Playing" ? "" : "" ) + " " + music-title + "  "}))
    ; (literal :content disks)
    (button :class ""
            :onclick "eww open --toggle audio-pop" 
      {" "+ (is-muted == "yes" ? "Muted" : volume+"%") + "  "})
    (button :class ""
            :onclick "eww open --toggle network-pop" 
      {"直 "+ wifi + " "})
    (button :class ""
      battery)
    ))

;; (defpoll interfaceId :interval "1s" "nmcli -f DEVICE,STATE dev | grep \\ connected")
;;(defpoll network :interval "3s"
;;  `nmcli -f STATE,TYPE,CONNECTION dev | awk '/wifi\\s+/{print $1 " " $3}'`)
;;(defwindow example
;;           :monitor 0
;;           :geometry (geometry :x "0"
;;                               :y "0"
;;                               :width "100%"
;;                               :height "30px"
;;                               :anchor "top center")
;;           :stacking "fg"
;;           :reserve (struts :distance "40px" :side "top")
;;           :windowtype "dock"
;;           :wm-ignore false
;;	(greeter :text "${current-window} ${EWW_DISK['/']['free']}"
;;			 :name "Tim"))
;;
;;(defwidget greeter [?text name]
;;  (box :orientation "horizontal"
;;       :halign "left"
;;    text
;;    (button :onclick "notify-send 'Hello' 'Hello, ${name}'"
;;      "Greet")))
;
