#!/bin/sh
set -Eeuo pipefail
usage(){
  cat <<EOF
Usage:
  wallpaper [options] [ROOT_RELATIVE_PATH]

Options
  -d ROOT_PATH    set root path
  -l              list items in root
EOF
}

random(){
  if [ ! -z "$2" ]; then
    find "$1" -type f -not -path "$1/$2" | shuf -n 1
  else
    find "$1" -type f | shuf -n 1
  fi
}

root="$HOME/Backgrounds"
exclude="_meta/*"

OPTIND=1
while getopts ":hd:l" arg; do
  case $arg in
  d)
    root="$OPTARG"
    if [ ! -d "$root" ]; then
      echo "'$root' is not a valid directory"
      usage; exit 1
    fi
    # defaults to not exclude anything
    unset exclude
    ;;
  h) usage; exit 0 ;;
  l) echo "Available Targets:"
    ls "$root"
    exit 0 ;;
  \?) echo "Invalid option: -$OPTARG"
    usage; exit 1;;
  :) echo "Option -$OPTARG requires an argument"
    usage; exit 1;;
  esac
done

# Shift to Required arguments
shift $((OPTIND-1))

if [ "$#" -lt 1 ] || [ -z "$1" ]; then
  image="$(random "$root" "${exclude:-}")"
elif [ -f "$root/$1" ]; then
  image="$root/$1"
elif [ -d "$root/$1" ]; then
  image="$(random "$root/$1" "${exclude:-}")"
else
  echo "'$1' is not a file or directory in '$root'"
  usage; exit 1
fi

if [ -z "$image" ]; then
	echo "Error: Argument '$image' is not image or directory" >&2
  exit 1
fi

if ! swww query &>/dev/null; then
  swww-daemon &
  # If not started, set image directly, no transition
  swww img "$image"
else
  swww img "$image" --transition-type wipe
fi
