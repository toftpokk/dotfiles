#!/bin/sh
set -Eeuo pipefail
usage(){
  cat <<EOF
Usage:
  wallpaper [options] [PATH absolute or root-relative]

Options
  -d ROOT_PATH    set root path
  -l              list items in root
  -p              interactive showcase mode
EOF
}

all(){
  if [ ! -z "$2" ]; then
    find "$1" -type f -not -path "$1/$2"
  else
    find "$1" -type f
  fi
}

root="$HOME/Backgrounds"
exclude="_meta/*"
play=false

OPTIND=1
while getopts ":hd:lp" arg; do
  case $arg in
  d)
    root="$OPTARG"
    if [ ! -d "$root" ]; then
      echo "'$root' is not a valid directory"
      usage; exit 1
    fi
    # defaults to not exclude anything
    unset exclude
    ;;
  h) usage; exit 0 ;;
  l) echo "Available Targets:"
    ls "$root"
    exit 0 ;;
  p) play=true;;
  \?) echo "Invalid option: -$OPTARG"
    usage; exit 1;;
  :) echo "Option -$OPTARG requires an argument"
    usage; exit 1;;
  esac
done

# Shift to Required arguments
shift $((OPTIND-1))

case "${1:-}" in
  /*)
    # target is relative path
    target="$1"
    unset exclude
    ;;
  *)
    # Join path if $1 is defined
    target="$root${1:+/$1}"
    ;;
esac

if [ -f "$target" ]; then
  image="$target"
elif [ -d "$target" ]; then
  image="$(all "$target" "${exclude:-}" | shuf -n 1)"
else
  echo "'$1' is not a file or directory in '$root'"
  usage; exit 1
fi

if [ -z "$image" ]; then
	echo "Error: Argument '$image' is not image or directory" >&2
  exit 1
fi

if ! swww query &>/dev/null; then
  swww-daemon &
fi

if ! "$play"; then
  swww img "$image" --transition-type wipe
else
  printf "Interactive Mode Started.\nPress Enter to Show Next Wallpaper\nPress Control-C to Exit\n"
  all "$target" "${exclude:-}" | while read -r image; do
    swww img "$image" --transition-type wipe
    echo "$image"
    read -r < /dev/tty
  done
fi

